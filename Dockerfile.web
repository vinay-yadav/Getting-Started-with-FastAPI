# Download and install python 3.13.2
FROM python:3.13.2-slim-bullseye

# Create a virtual environment
RUN python -m venv /opt/venv

# Set the virtual environment as the current location
ENV PATH="/opt/venv/bin:$PATH"

# Upgrade pip to the latest version
RUN pip install --upgrade pip

# Set python related environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Install OS dependencies on our mini VM
RUN apt-get update && apt-get install -y \
    # for postgres
    libpq-dev \
    # for Pillow
    libjpeg-dev \
    # for CairoSVG
    libcairo2-dev \
    # other dependencies
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Create a working directory
RUN mkdir -p /code

# Set the working directory in the container
WORKDIR /code

COPY requirements.txt /tmp/requirements/txt

# Copy project code in the container's working directory
COPY ./src /code

# Install python project dependencies
RUN pip install -r /tmp/requirements/txt

# make the bash script executable
COPY ./boot/docker-run.sh /opt/run.sh
RUN chmod +x /opt/run.sh

# Clean up apt cache to reduce image size
RUN apt-get remove --purge -y \
    && apt-get autoremove -y \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Run the FastAPI project via the runtime script
# when the container starts
CMD ["/opt/run.sh"]

